
" space is leader
let mapleader=" "
set timeoutlen=2000
""""""""""""""""""""""""""
"=> vscode 
""""""""""""""""""""""""""
if exists('g:vscode')

call plug#begin('~/.config/nvim/pluggedVscode')

   Plug 'tpope/vim-surround'
   Plug 'terryma/vim-multiple-cursors'
   Plug 'asvetliakov/vim-easymotion'
    
call plug#end()

"go to symbol
map <leader>gs <cmd> call VSCodeNotify('workbench.action.gotoSymbol')<CR>

"rename symbol
map <leader>re <cmd> call VSCodeNotify('editor.action.rename')<CR>

"toggle sidebar
map <leader>b <cmd> call VSCodeNotify('workbench.action.toggleSidebarVisibility')<CR>

"reveal in explorer
map <leader>e <cmd> call VSCodeNotify('revealInExplorer')<CR>

"rename file
map <leader>rf <cmd> call VSCodeNotify('fileutils.renameFile')<CR>

"focus terminal
map <leader>t <cmd> call VSCodeNotify('workbench.action.terminal.toggleTerminal')<CR>

"split editor down
map <leader>wj <cmd> call VSCodeNotify('workbench.action.splitEditorDown')<CR>
"split editor right
map <leader>wl <cmd> call VSCodeNotify('workbench.action.splitEditorRight')<CR>
"split editor up
map <leader>wk <cmd> call VSCodeNotify('workbench.action.splitEditorUp')<CR>
"split editor left
map <leader>wh <cmd> call VSCodeNotify('workbench.action.splitEditorLeft')<CR>

"comment selection
"map <leader>/ <cmd> call VSCodeNotify('editor.action.commentLine')<CR>



""""""""""""""""""""""""""""""""""" 
"=> normal nvim
""""""""""""""""""""""""""""""""""
else

call plug#begin('~/.config/nvim/plugged')
   "themes
   Plug 'tomasiser/vim-code-dark' "dark theme
   Plug 'itchyny/lightline.vim' "status bar
   Plug 'ryanoasis/vim-devicons' "icons for explorer tree

  "tools
  Plug 'terryma/vim-multiple-cursors'
  Plug 'preservim/nerdtree'
  Plug 'neoclide/coc.nvim', {'branch' : 'release'} "vscode like autocomplete
  Plug 'tpope/vim-surround' 
  Plug 'jiangmiao/auto-pairs'
  Plug 'tpope/vim-fugitive'     "git
  Plug 'prettier/vim-prettier'  "format
  Plug 'w0rp/ale' "for eslint to format with prettier
  Plug 'easymotion/vim-easymotion'
"  Plug 'kien/ctrlp.vim:'
  
  " Language Syntax Support
  Plug 'pangloss/vim-javascript' "JS highlighting
  Plug 'mxw/vim-jsx' "JSX syntax highlighting
  Plug 'styled-components/vim-styled-components', { 'branch': 'main' }

  call plug#end()
  
  
  """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
  "=> Theme Settings
  """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
  set t_Co=256
  set t_ut=
  colorscheme codedark

  "show comand and mode
  set showcmd
  set showmode
  set cmdheight=2

  "show file stats
  set ruler

  "turn on syntax highlight
  syntax on

  "lightline
  let g:lightline = { 'colorscheme' : 'codedark', }
  set laststatus=2
  set noshowmode

  " Blink cursor on error instead of beeping (grr)
  set visualbell


  """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
  "=> Core Functionality (general settings, keyboard shortcuts)
  """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
  set backup                 " create backups
  set backupdir=/tmp         " tell vim where to put its backup files
  set dir=/tmp               " tell vim where to put swap files
  set timeoutlen=1000        " speed vim up
  set ttimeoutlen=0          " https://stackoverflow.com/questions/37644682/why-is-vim-so-slow/37645334
  set ttyfast                " Rendering

  set wildmenu                "better comand menu

  
  """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
  " => NERDTree 
  """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
  map <leader>n :NERDTreeToggle<CR> 
  let NERDTreeQuitOnOpen = 1 "closes NerdTree when opening a file


  
    """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
  " => Text, tab and indent related
  """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

  "turn hybrid line numbers on
  :set number relativenumber
  :set nu rnu

  " Visualize tabs and newlines                                                 
  set listchars=tab:▸\ ,eol:¬                                                   
  " Uncomment this to enable by default:                         
  " set list " To enable by default                   
  " Or use your leader key + l to toggle on/off  
  map <leader>l :set list!<CR> " Toggle tabs and EOL

  "tab = 2 spaces
  set tabstop=2
  set shiftwidth=2
  set expandtab

  set tw=80                 " Line Length set to 80

  set ai            " Auto indent
  " set si            " Smart indent
  set wrap          " Wrap lines
  set nowrap        " Don't wrap text

  " Shows the title within the window
  set title titlestring=

  """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
  " => Conquer of Completion 
  """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
  " use <tab> for trigger completion and navigate to the next complete item
  function! s:check_back_space() abort
    let col = col('.') - 1
    return !col || getline('.')[col - 1]  =~ '\s'
  endfunction

  inoremap <silent><expr> <Tab>
        \ pumvisible() ? "\<C-n>" :
        \ <SID>check_back_space() ? "\<Tab>" :
        \ coc#refresh()

  """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
  " => Prettier
  """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
  " Autosave
  " disables autosave feature
  let g:prettier#autoformat = 0

  " print spaces between brackets
  " Prettier default: true
  let g:prettier#config#bracket_spacing = 'true'

  " runs prettier on file formats
  autocmd BufWritePre *.html,*.js,*.jsx,*.mjs,*.ts,*.tsx,*.css,*.less,*.scss,*.json,*.graphql,*.md,*.vue PrettierAsync

  " eslint setup
  let g:ale_fixers = {
        \ 'javascript': ['eslint']
        \ }

  let g:ale_sign_error = '❌'
  let g:ale_sign_warning = '⚠️'

  let g:ale_fix_on_save = 1
endif

""""""""""""""""""""""""""""
"=> vscode and nvim
"""""""""""""""""""""""""


" move faster
noremap J 5j
noremap K 5k

"no arrow key for training with hjkl
map <up> <nop>
map <down> <nop>
map <left> <nop>
map <right> <nop>

" fix for backspace problems
set backspace=indent,eol,start

" remove highlight
noremap <leader>h :nohl<cr>

" get clipboard for register
set clipboard=unnamed,unnamedplus

"""""""""""""""""""""
"=> multi cursor
"""""""""""""""""""""
let g:multi_cursor_use_default_mapping=0

" Default mapping
let g:multi_cursor_start_word_key      = '<C-m>'
"let g:multi_cursor_select_all_word_key = '<A-m>'
"let g:multi_cursor_start_key           = 'g<C-m>'
"let g:multi_cursor_select_all_key      = 'g<A-m>'
let g:multi_cursor_next_key            = '<C-m>'
let g:multi_cursor_prev_key            = '<C-i>'
let g:multi_cursor_skip_key            = '<C-x>'
let g:multi_cursor_quit_key            = '<Esc>'
